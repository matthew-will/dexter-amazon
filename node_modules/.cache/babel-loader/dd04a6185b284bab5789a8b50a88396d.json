{"remainingRequest":"/Users/mattwill/Code/dexter/node_modules/thread-loader/dist/cjs.js!/Users/mattwill/Code/dexter/node_modules/babel-loader/lib/index.js!/Users/mattwill/Code/dexter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mattwill/Code/dexter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mattwill/Code/dexter/src/components/Video.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mattwill/Code/dexter/src/components/Video.vue","mtime":1632279706618},{"path":"/Users/mattwill/Code/dexter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mattwill/Code/dexter/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mattwill/Code/dexter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mattwill/Code/dexter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mattwill/Code/dexter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ3NhcCB9IGZyb20gImdzYXAiOwppbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSAiZ3NhcC9TY3JvbGxUcmlnZ2VyIjsKZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJWaWRlbyIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpZGVvOiAiIgogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnNjcm9sbFRyaWdnZXIoKTsKICAgIGdzYXAudG8oIi5sYW5kaW5nIiwgewogICAgICBhdXRvQWxwaGE6IDEsCiAgICAgIGR1cmF0aW9uOiAxCiAgICB9KTsKCiAgICBpZiAod2luZG93LmlubmVyV2lkdGggPCA2MDApIHsKICAgICAgdGhpcy52aWRlbyA9ICItbW9iaWxlIjsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMudmlkZW8gPSAiIjsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNjcm9sbFRyaWdnZXI6IGZ1bmN0aW9uIHNjcm9sbFRyaWdnZXIoKSB7CiAgICAgIC8qIFRoZSBlbmNvZGluZyBpcyBzdXBlciBpbXBvcnRhbnQgaGVyZSB0byBlbmFibGUgZnJhbWUtYnktZnJhbWUgc2NydWJiaW5nLiAqLwogICAgICAvLyBmZm1wZWcgLWkgKmluc2VydCBmaWxlIG5hbWUqIC1tb3ZmbGFncyBmYXN0c3RhcnQgLXZjb2RlYyBsaWJ4MjY0IC1jcmYgMjMgLWcgMSAtcGl4X2ZtdCB5dXY0MjBwIG91dHB1dC5tcDQKICAgICAgLy8gZmZtcGVnIC1pICppbnNlcnQgZmlsZSBuYW1lKiAtdmYgc2NhbGU9OTYwOi0xIC1tb3ZmbGFncyBmYXN0c3RhcnQgLXZjb2RlYyBsaWJ4MjY0IC1jcmYgMjAgLWcgMSAtcGl4X2ZtdCB5dXY0MjBwIG91dHB1dF85NjAubXA0CiAgICAgIHZhciB2aWRlbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoInZpZGVvIik7CiAgICAgIHZhciB0bCA9IGdzYXAudGltZWxpbmUoewogICAgICAgIGRlZmF1bHRzOiB7CiAgICAgICAgICBkdXJhdGlvbjogMQogICAgICAgIH0sCiAgICAgICAgc2Nyb2xsVHJpZ2dlcjogewogICAgICAgICAgdHJpZ2dlcjogIiNjb250YWluZXIiLAogICAgICAgICAgc3RhcnQ6ICJ0b3AgdG9wIiwKICAgICAgICAgIGVuZDogIjkwJSA5MCUiLAogICAgICAgICAgc2NydWI6IHRydWUsCiAgICAgICAgICBvbkVudGVyOiBmdW5jdGlvbiBvbkVudGVyKCkgewogICAgICAgICAgICBnc2FwLnRvKCIubGFuZGluZyIsIHsKICAgICAgICAgICAgICBhdXRvQWxwaGE6IDAsCiAgICAgICAgICAgICAgZHVyYXRpb246IDEsCiAgICAgICAgICAgICAgc2NhbGU6IDAuOTUKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9LAogICAgICAgICAgb25MZWF2ZTogZnVuY3Rpb24gb25MZWF2ZSgpIHsKICAgICAgICAgICAgZ3NhcC50bygiLmJ1dHRvbiIsIHsKICAgICAgICAgICAgICB5OiAwLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAxLjI1LAogICAgICAgICAgICAgIGF1dG9BbHBoYTogMSwKICAgICAgICAgICAgICBzdGFnZ2VyOiAwLjIsCiAgICAgICAgICAgICAgZWFzZTogIkV4cG8uaW5PdXQiCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSwKICAgICAgICAgIG9uRW50ZXJCYWNrOiBmdW5jdGlvbiBvbkVudGVyQmFjaygpIHsKICAgICAgICAgICAgZ3NhcC50bygiLmJ1dHRvbiIsIHsKICAgICAgICAgICAgICB5OiAyMCwKICAgICAgICAgICAgICBkdXJhdGlvbjogMC43NSwKICAgICAgICAgICAgICBhdXRvQWxwaGE6IDAKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9LAogICAgICAgICAgb25MZWF2ZUJhY2s6IGZ1bmN0aW9uIG9uTGVhdmVCYWNrKCkgewogICAgICAgICAgICBnc2FwLnRvKCIubGFuZGluZyIsIHsKICAgICAgICAgICAgICBhdXRvQWxwaGE6IDEsCiAgICAgICAgICAgICAgZHVyYXRpb246IDAuNzUsCiAgICAgICAgICAgICAgc2NhbGU6IDEKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIHZpZGVvLm9ubG9hZGVkbWV0YWRhdGEgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc29sZS5sb2codmlkZW8uZHVyYXRpb24pOwogICAgICAgIHRsLnRvKHZpZGVvLCB7CiAgICAgICAgICBjdXJyZW50VGltZTogdmlkZW8uZHVyYXRpb24gLSAxCiAgICAgICAgfSk7CiAgICAgIH07IC8vIERlYWxpbmcgd2l0aCBkZXZpY2VzCgoKICAgICAgZnVuY3Rpb24gaXNUb3VjaERldmljZSgpIHsKICAgICAgICByZXR1cm4gIm9udG91Y2hzdGFydCIgaW4gd2luZG93IHx8IG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyA+IDAgfHwgbmF2aWdhdG9yLm1zTWF4VG91Y2hQb2ludHMgPiAwOwogICAgICB9CgogICAgICBpZiAoaXNUb3VjaERldmljZSgpKSB7CiAgICAgICAgdmlkZW8ucGxheSgpOwogICAgICAgIHZpZGVvLnBhdXNlKCk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["Video.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAA,IAAA,QAAA,MAAA;AACA,SAAA,aAAA,QAAA,oBAAA;AAEA,IAAA,CAAA,cAAA,CAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA,SAAA,aAAA;AACA,IAAA,IAAA,CAAA,EAAA,CAAA,UAAA,EAAA;AAAA,MAAA,SAAA,EAAA,CAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KAAA;;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,GAAA,EAAA;AACA,WAAA,KAAA,GAAA,SAAA;AACA,KAFA,MAEA;AACA,WAAA,KAAA,GAAA,EAAA;AACA;AACA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA;AAEA;AACA;AAEA,UAAA,KAAA,GAAA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA;AAEA,UAAA,EAAA,GAAA,IAAA,CAAA,QAAA,CAAA;AACA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SADA;AAEA,QAAA,aAAA,EAAA;AACA,UAAA,OAAA,EAAA,YADA;AAEA,UAAA,KAAA,EAAA,SAFA;AAGA,UAAA,GAAA,EAAA,SAHA;AAIA,UAAA,KAAA,EAAA,IAJA;AAKA,UAAA,OAAA,EAAA,mBAAA;AACA,YAAA,IAAA,CAAA,EAAA,CAAA,UAAA,EAAA;AAAA,cAAA,SAAA,EAAA,CAAA;AAAA,cAAA,QAAA,EAAA,CAAA;AAAA,cAAA,KAAA,EAAA;AAAA,aAAA;AACA,WAPA;AAQA,UAAA,OAAA,EAAA,mBAAA;AACA,YAAA,IAAA,CAAA,EAAA,CAAA,SAAA,EAAA;AACA,cAAA,CAAA,EAAA,CADA;AAEA,cAAA,QAAA,EAAA,IAFA;AAGA,cAAA,SAAA,EAAA,CAHA;AAIA,cAAA,OAAA,EAAA,GAJA;AAKA,cAAA,IAAA,EAAA;AALA,aAAA;AAOA,WAhBA;AAiBA,UAAA,WAAA,EAAA,uBAAA;AACA,YAAA,IAAA,CAAA,EAAA,CAAA,SAAA,EAAA;AACA,cAAA,CAAA,EAAA,EADA;AAEA,cAAA,QAAA,EAAA,IAFA;AAGA,cAAA,SAAA,EAAA;AAHA,aAAA;AAKA,WAvBA;AAwBA,UAAA,WAAA,EAAA,uBAAA;AACA,YAAA,IAAA,CAAA,EAAA,CAAA,UAAA,EAAA;AAAA,cAAA,SAAA,EAAA,CAAA;AAAA,cAAA,QAAA,EAAA,IAAA;AAAA,cAAA,KAAA,EAAA;AAAA,aAAA;AACA;AA1BA;AAFA,OAAA,CAAA;;AAgCA,MAAA,KAAA,CAAA,gBAAA,GAAA,YAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA;AACA,QAAA,EAAA,CAAA,EAAA,CAAA,KAAA,EAAA;AAAA,UAAA,WAAA,EAAA,KAAA,CAAA,QAAA,GAAA;AAAA,SAAA;AACA,OAHA,CAxCA,CA6CA;;;AACA,eAAA,aAAA,GAAA;AACA,eACA,kBAAA,MAAA,IACA,SAAA,CAAA,cAAA,GAAA,CADA,IAEA,SAAA,CAAA,gBAAA,GAAA,CAHA;AAKA;;AACA,UAAA,aAAA,EAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,KAAA;AACA;AACA;AA1DA;AAhBA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"landing\">\n      <img class=\"dexter-logo\" src=\"logo.png\" alt=\"Dexter Logo\" />\n      <div class=\"scroll-cta\">Scroll to Continue</div>\n    </div>\n\n    <div class=\"cta\">\n      <div class=\"button\">Launch AR Filter</div>\n      <div class=\"button\">Watch the first Episode</div>\n      <div class=\"button\">Join Showtime</div>\n    </div>\n    <div class=\"video-outer\">\n      <video\n        ref=\"video\"\n        :src=\"`/dexter${video}.mp4`\"\n        playsinline\n        muted\n        poster=\"poster.jpg\"\n        class=\"video-background\"\n      ></video>\n    </div>\n\n    <div id=\"container\"></div>\n  </div>\n</template>\n\n<script>\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default {\n  name: \"Video\",\n  data() {\n    return {\n      video: \"\",\n    };\n  },\n  mounted() {\n    this.scrollTrigger();\n    gsap.to(\".landing\", { autoAlpha: 1, duration: 1 });\n    if (window.innerWidth < 600) {\n      this.video = \"-mobile\";\n    } else {\n      this.video = \"\";\n    }\n  },\n  methods: {\n    scrollTrigger() {\n      /* The encoding is super important here to enable frame-by-frame scrubbing. */\n\n      // ffmpeg -i *insert file name* -movflags faststart -vcodec libx264 -crf 23 -g 1 -pix_fmt yuv420p output.mp4\n      // ffmpeg -i *insert file name* -vf scale=960:-1 -movflags faststart -vcodec libx264 -crf 20 -g 1 -pix_fmt yuv420p output_960.mp4\n\n      let video = document.querySelector(\"video\");\n\n      let tl = gsap.timeline({\n        defaults: { duration: 1 },\n        scrollTrigger: {\n          trigger: \"#container\",\n          start: \"top top\",\n          end: \"90% 90%\",\n          scrub: true,\n          onEnter: () => {\n            gsap.to(\".landing\", { autoAlpha: 0, duration: 1, scale: 0.95 });\n          },\n          onLeave: () => {\n            gsap.to(\".button\", {\n              y: 0,\n              duration: 1.25,\n              autoAlpha: 1,\n              stagger: 0.2,\n              ease: \"Expo.inOut\",\n            });\n          },\n          onEnterBack: () => {\n            gsap.to(\".button\", {\n              y: 20,\n              duration: 0.75,\n              autoAlpha: 0,\n            });\n          },\n          onLeaveBack: () => {\n            gsap.to(\".landing\", { autoAlpha: 1, duration: 0.75, scale: 1 });\n          },\n        },\n      });\n\n      video.onloadedmetadata = function() {\n        console.log(video.duration);\n        tl.to(video, { currentTime: video.duration - 1 });\n      };\n\n      // Dealing with devices\n      function isTouchDevice() {\n        return (\n          \"ontouchstart\" in window ||\n          navigator.maxTouchPoints > 0 ||\n          navigator.msMaxTouchPoints > 0\n        );\n      }\n      if (isTouchDevice()) {\n        video.play();\n        video.pause();\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.video-outer,\n.landing {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n}\n.landing {\n  z-index: 101;\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n}\nvideo {\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n}\n\n#container {\n  height: 500vh;\n}\n\n.cta {\n  position: fixed;\n  bottom: 10vh;\n  z-index: 101;\n  display: flex;\n\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n}\n.button {\n  background: #ad071c;\n  padding: 20px 30px;\n  width: auto;\n  color: white;\n  text-transform: uppercase;\n  margin: 10px;\n  transition: background 250ms;\n  cursor: pointer;\n  opacity: 0;\n  transform: translateY(20px);\n}\n.button:hover {\n  background: #850516;\n}\n.dexter-logo {\n  width: 50%;\n  margin-bottom: 10vh;\n}\n.scroll-cta {\n  background: #ad071c;\n  padding: 20px 30px;\n  width: auto;\n  color: white;\n  text-transform: uppercase;\n}\n@media only screen and (max-width: 600px) {\n  .cta {\n    flex-direction: column;\n  }\n  .button {\n    width: 70%;\n  }\n  #container {\n    height: 1000vh;\n  }\n  .dexter-logo {\n    width: 95%;\n    margin-bottom: 15vh;\n    margin-top: 15vh;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}